{"mappings":"AAEA,MAAMA,EAAUC,SAASC,cAAc,SACvCF,EAAQG,iBAAiB,UAMzB,SAAsBC,GACpBA,EAAIC,iBACN,MAAMC,EAAW,IAAIC,SAASP,GAC9BM,EAASE,SAAQ,CAACC,EAAMC,KACtBJ,EAASI,GAAQD,EACjBE,EAAkB,IAAIL,EAAS,IAKjCM,QAAQC,IAAI,SAASF,GAWnB,WACE,MAAMG,OAAEA,EAAMC,MAAEA,EAAKC,KAAEA,GAASL,EAChCC,QAAQC,IAAIC,E,CAGdG,GAmCF,IAAIC,EAAWC,aAAaC,QAAQ,YACpCT,EAAkBU,KAAKC,MAAMJ,E,IAnE7B,IAAIP,EAAkB","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nconst refForm = document.querySelector('.form');\nrefForm.addEventListener('submit', onFormSubmit)\nlet formDataCurrent = {}\n\n\n\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault()\nconst formData = new FormData(refForm)\nformData.forEach((value,name) =>{\n  formData[name] = value;\n  formDataCurrent = {...formData} \n\n  \n})\n\nconsole.log(\"Value \",formDataCurrent);\n  \n\n//   if (evt.currentTarget === evt.target) {\n\n   \n//     formDataCurrent[name] = value;\n// return localStorage.setItem(\"formData\", JSON.stringify(formDataCurrent));\n\n//   }\n  \n  function foo() { \n    const { amount, delay, step } = formDataCurrent;\n    console.log(amount);\n  }\n  \n  foo()\n  \n  \n\n\n\n  \n  function createPromise(position, delay) {  \n    \n    const DELAY = delay;\n const shouldResolve = Math.random() > 0.3;\n\n\n    return new Promise((resolve, reject) => { \n      setTimeout(() => { \n if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n      }, DELAY)\n    })\n\n \n  \n \n}\n\n\n\n\n\n\n\n\nlet settings = localStorage.getItem(\"formData\")\nformDataCurrent = JSON.parse(settings)\n\n\n// if (formDataCurrent !== {}) {\n//   console.log(\"ok\");\n// } else { \n//   console.log(\"no\");\n// }\n\n// console.log(formDataCurrent === true);\n\n\n\n// const formRef = document.querySelector('.form')\n// const formInputDelayRef = formRef.firstElementChild\n\n// formRef.addEventListener(\"submit\", onValueForm)\n// formDataCurrent = {}\n\n\n\n// function onValueForm(evt) {\n//   evt.preventDefault()\n  \n  \n//     const formData = new FormData(formRef)\n//   formData.forEach((value, name) => {\n//     formData[evt.target.name] = evt.target.value\n      \n//     localStorage.setItem(\"formDataCurrent\", JSON.stringify(formData))\n     \n//   })\n  \n// }\n  \n\n\n//  let setings = localStorage.getItem('currentData')\n//     setings = JSON.parse(setings);\n\n// console.log(setings);\n\n\n// function createPromise(position, delay) {\n\n\n\n//   // const shouldResolve = Math.random() > 0.3;\n//   // if (shouldResolve) {\n//   //   // Fulfill\n//   // } else {\n//   //   // Reject\n//   // }\n\n\n// }\n\n\n\n\n\n\n\n\n"],"names":["$47d4ff9957288465$var$refForm","document","querySelector","addEventListener","evt","preventDefault","formData","FormData","forEach","value","name","$47d4ff9957288465$var$formDataCurrent","console","log","amount","delay","step","foo","settings","localStorage","getItem","JSON","parse"],"version":3,"file":"03-promises.48886e10.js.map"}